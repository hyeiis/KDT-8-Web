<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <script src="/socket.io/socket.io.js"></script>
    <title>02. 채팅방</title>
    <style>
        #msg {
            list-style: none;
        }

        #body {
            width: 100%;
            height: 80vh;
            /* position: relative; */
            background-color: lightblue;
            overflow-y: scroll;
        }

        #chat {
            /* position: absolute; */
            /* bottom: 0px; */
            margin-top: 2px;
            width: 100%;
            display: flex;
            justify-content: space-between;
        }

        #chat input {
            width: 85%;
        }

        p {
            margin: 0;
            border-radius: 10px;
            padding: 7px;
        }

        .me,
        .others {
            display: flex;
            padding: 3px 3px;
        }

        .me {
            justify-content: end;
        }

        .others {
            justify-content: baseline;
        }

        .me p {
            margin-left: 10px;
            background-color: yellow;
        }

        .others p {
            margin-right: 10px;
            background-color: white;
        }

        /* notice */
        #notice {
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        #notice p {
            background-color: gray;
            font-size: 7px;
            text-align: center;
            border-radius: 20px;
            color: white;
        }

        /* secret message */
        .secrett p {
            background-color: pink;
        }
    </style>
</head>

<body>
    <div id="main">
        <form id="room">
            <input type="text" id="roomName" placeholder="채팅방 이름 입력" />
            <input type="text" id="userName" placeholder="사용자 이름 입력" />
            <button>만들기</button>
        </form>
        <ul id="lists"></ul>
    </div>
    <div id="body" hidden>
        <div id="notice"></div>
        <div id="msg"></div>
    </div>
    <div id="chatD" hidden>
        <form id="chat">
            <select id="userList"></select>
            <input type="text" id="message" placeholder="메세지 입력" />
            <button>입력</button>
        </form>
    </div>

    <script>
        const socket = io();
        const roomForm = document.querySelector("#room");
        const chatForm = document.querySelector("#chat");
        const msg = document.querySelector("#msg");
        const notice = document.querySelector("#notice");

        let myName;

        //룸리스트
        socket.on("roomList", (roomLists) => {
            console.log(roomLists);
            const lists = document.querySelector("#lists");
            lists.textContent = "";
            roomLists.forEach((roomList) => {
                const li = document.createElement("li");
                li.textContent = `${roomList} 채팅방으로 닉네임 입력 후 입장`;
                lists.appendChild(li);
            });
        });

        //사용자 리스트
        socket.on("userList", (userLists) => {
            console.log(userLists);
            const lists = document.querySelector("#userList");
            lists.textContent = "";
            let options = `<option value="all">전체</option>`;
            // for in 배열
            // for of 객체
            for (let i of userLists) {
                options += `<option value="${i.key}">${i.name}</option>`;
            }
            lists.innerHTML = options;
        });

        socket.on("notice", (message) => {
            const div = document.createElement("div"); // 밖 div
            const p = document.createElement("p"); // 안쪽 p

            p.textContent = message;
            div.appendChild(p);
            notice.appendChild(div);
        });

        //메세지 띄우기
        socket.on("newMessage", (message, nickname, bool) => {
            console.log(message);
            const div = document.createElement("div"); // 밖 div
            const p = document.createElement("p"); // 안쪽 p

            console.log('닉네임:', myName);
            if (myName === nickname) {
                div.classList.add('me');
            } else {
                div.classList.add('others');
            }

            if (bool) {
                div.classList.add('secret');
            }

            // 채팅 메시지
            if (!bool) {
                p.textContent = `${nickname}: ${message}`;
            } else {
                p.textContent = `(비밀) ${nickname}: ${message}`;
            }
            div.appendChild(p);
            msg.appendChild(div);
        });

        ///폼 이벤트
        roomForm.addEventListener("submit", (e) => {
            e.preventDefault();
            const roomName = roomForm.querySelector("#roomName");
            const userName = roomForm.querySelector("#userName");
            if (roomName.value === "" || userName.value === "") {
                alert("방이름과 닉네임 적어주세요");
                return;
            }
            socket.emit("create", roomName.value, userName.value, () => {
                const main = document.querySelector("#main");
                const body = document.querySelector("#body");
                const chatD = document.querySelector("#chatD");

                main.hidden = true;
                body.hidden = false;
                chatD.hidden = false;
                myName = userName.value;
            });
        });
        // 메시지 보내기
        chatForm.addEventListener("submit", (e) => {
            e.preventDefault();
            const user = document.querySelector("#userList");
            const message = document.querySelector("#message");
            console.log(user.value);
            const msg = {
                nickname: myName,
                user: user.value, // user는 all 또는 socketId
                message: message.value,
            };
            socket.emit("sendMessage", msg);
            message.value = '';
        });
    </script>
</body>

</html>