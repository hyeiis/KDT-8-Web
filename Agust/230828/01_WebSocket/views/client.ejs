<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Client</title>
</head>

<body>
    <ul style="list-style: none;">
    </ul>
    <form id="chat">
        <input type="text" id="name" placeholder="이름">
        <input type="text" id="message" placeholder="메시지"><br>
        <button>전송</button>
    </form>
    <script>
        const socket = new WebSocket("ws://localhost:8000");
        // form 가져오기
        const chatForm = document.getElementById('chat');
        // ul 가져오기
        const ul = document.querySelector('ul');

        //------- socket event -------
        // 서버 연결
        socket.addEventListener("open", (event) => {
            // 객체로 보내고 있기 때문에 문자열 하나만 전송하면 오류가 난다.
            // socket.send('Hello Server');
            socket.send(JSON.stringify({ user: 'client', message: "Hello Server" }));
            console.log("서버에 연결되었습니다");
        });
        // 메시지 주고 받기
        socket.addEventListener("message", (event) => {
            console.log(`서버로부터 받은 메시지: ${event.data}`);

            const li = document.createElement('li');
            li.textContent = event.data;
            ul.appendChild(li);

        });
        // 오류 발생
        socket.addEventListener("error", (event) => {
            console.log("오류가 발생했습니다");
        });
        // 종류
        socket.addEventListener("close", (event) => {
            console.log("서버와의 연결이 종료되었습니다");
        });

        //------ form event -------
        chatForm.addEventListener("submit", (event) => {
            // submit 이벤트는 항상 preventDefault()를 해주어야 함
            event.preventDefault();
            const user = chatForm.querySelector('#name');
            const msg = chatForm.querySelector('#message');
            // 서버가 모두 nodejs가 아니기 때문에 서버로 보내는 데이터는 문자열 형태로 보내주어야 함
            socket.send(JSON.stringify({ user: user.value, message: msg.value }));
            msg.value = '';
        })
    </script>
</body>

</html>